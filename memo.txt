私が1年間やってきたことについて発表します。

私がどのような業務を行って去年の10月からIM-BPMというBPMパッケージ製品開発を行っており、そこでフロントエンドの開発をしています。
ではまず、BPMが何なのかという説明から入りたいと思います。

[画像]
BPMとは、ビジネスプロセスマネジメントの略です。
業務管理手法のひとつで業務の流れを可視化して課題を分析し、継続的にPDCA回していき業務改善を図っていくというものです。
-----------
そしてIM-BPMはその一連の流れが行えるBPMシステムです。
-----------

次に、IM-BPM開発で、利用してきたフロントエンドの技術についてです。
今回紹介するのはNPMとVue.jsです。

ではまずNPMから紹介します。
NPMはNode Package Managerの略で、名前の通りNode.jsのパッケージ(ライブラリ)管理ツールです。
node.jsのパッケージ管理ツールと聞くとサーバーサイドJavaScriptのイメージがありますが、NPMはこの後説明するVue.jsなどフロントエンド側のライブラリの管理も行います。

[画像]
このようにNPMでVue.jsやWebpackなどのパッケージを管理します。

次にVue.jsについて紹介します。
Vue.jsはJavaScriptのフレームワークです。
Vue.jsは、プログレッシブフレームワークと呼ばれています。

プログレッシブフレームワークとは、コアとなる部分はシンプルなものしか提供しないで、webアプリケーションが複雑になったときに、必要に応じて開発者が機能を選択できるフレームワークです。
そのためVue.jsのコアは双方向データバインディングに特化したViewライブラリとなっいて、スモールスタート可能です。
よく比較されるAngularはVue.jsとは逆のフルスタックなフレームワークで多機能なため、学習コストがとても高かったり、小規模なアプリではオーバースペックになってしまいます。

また、基本的なライブラリは公式で提供されており、とりあえずこれを入れておけばOKなものも用意されています。

次にVue.jsの特長について説明に入ります。

1. MVVM
Vue.jsはMVVMと呼ばれる設計パターンを採用しているフレームワークです。
MVVMはModel、View、 ViewModel の3つでアプリケーションを構築します。

[コード画像]
2. コンポーネント指向
コンポーネントとはパーツ（機能）単位で　HTMLをまとめて どこで使っても同じように再利用できるようにするものです。
更にVue.jsには単一ファイルコンポーネントと呼ばれるものがあります。
基本的には普通のコンポーネントと同じですが、パーツを構成するために必要な HTML・CSS・JSを.vueという拡張子のファイルにひとまとめに管理することができるという便利機能です。

3. 学習コストが低い
先程のコンポーネント画像の様に、いつものHTML、JavaScript、CSSが使える
公式サイトが日本語化されている

4. 